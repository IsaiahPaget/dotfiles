#################################
#
# Backend
#
#################################

# Backend to use: "xrender" or "glx".
# GLX backend is typically much faster but depends on a sane driver.

# backend = "xrender";
# backend = "xr_glx_hybrid";
backend = "glx";

#################################
#
# GLX backend
#
#################################

glx-no-stencil = true;

# GLX backend: Copy unmodified regions from front buffer instead of redrawing them all.
# My tests with nvidia-drivers show a 10% decrease in performance when the whole screen is modified,
# but a 20% increase when only 1/4 is.
# My tests on nouveau show terrible slowdown.
# Useful with --glx-swap-method, as well.
glx-copy-from-front = false;

#################################
#
# Opacity
#
#################################


inactive-opacity = 1;
active-opacity = 1;
frame-opacity = 1;
inactive-opacity-override = false;

blur-background = true;


blur-method = "dual_kawase";
blur-strength = 24;

#################################
#
# Fading
#
#################################

fading = true;
fade-delta = 8;
#################################
#
# OTHER CONFIG
#
#################################

log-level = "warn";
# log-file = "/path/to/your/log/file";

vsync = true;

#################################
#
# Window type settings
#
#################################
wintypes:
{
	dock = { shadow = true; }
	dnd = { shadow = false; }
	popup_menu = { opacity = 1; }
	dropdown_menu = { opacity = 1; }
	
	# This avoid problems with transparent windows while use-damage = true;.
	# normal = { full-shadow = true;}; 

#   tooltip = { fade = true; shadow = true; opacity = 0.75; focus = true; full-shadow = false; };



};

opacity-rule = [
  "95:class_g = 'kitty' && focused",
  "80:class_g = 'kitty' && !focused"
];

